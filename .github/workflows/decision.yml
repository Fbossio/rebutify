name: Create Branch and PR from Issue Label

on:
  issues:
    types: [labeled]

jobs:
  create_branch_and_pr:
    if: github.event.label.name == 'decision'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Authorization
      run: |
        # Get username of GitHub account that triggered this flow
        opener=${{ github.actor }}
        
        # Get list of approved contributors
        contributors=$(curl https://api.github.com/repos/Monstarrrr/Rebutify/contributors | jq -r '[.[] | select(.type == "User") | .login] | join(",")')
        
        # Convert the comma-separated string to an array
        IFS=',' read -r -a contributor_array <<< "$contributors"

        # Check if triggering user is in the array
        if [[ ! " ${contributor_array[@]} " =~ " $opener " ]]; then
          echo "Triggering user is unauthorized."
          exit 1
        fi
    - name: Check out code
      uses: actions/checkout@v3

    - name: Extract filename and decision type from issue title
      id: extract_info
      run: |
        echo "::set-output name=fileName::$(echo '${{ github.event.issue.title }}' | awk -F'[()]' '{split($2,a,","); print a[1]}'"
        echo "::set-output name=decisionType::$(echo '${{ github.event.issue.title }}' | awk -F'[()]' '{split($2,a,","); print a[2]}'"

    - name: Create new branch
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git checkout -b "issue-${{ github.event.issue.number }}"
        
        # Create the directory structure for the documentation
        mkdir -p docs/${{ steps.extract_info.outputs.decisionType }}/${{ steps.extract_info.outputs.fileName }}
        
        # Create a new.md file with the issue's body as content
        echo "${{ github.event.issue.body }}" > docs/${{ steps.extract_info.outputs.decisionType }}/${{ steps.extract_info.outputs.fileName }}.md
        
        git lfs track "*.md" # Track markdown files if they are large
        git add.
        git commit -m "Add documentation for ${{ github.event.issue.title }}"
        git push origin "docs/${{ github.event.issue.number }}_decision-${{ steps.extract_info.outputs.fileName }}"

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Add documentation for decision: ${{ github.event.issue.title }}"
        title: "Automated PR for issue ${{ github.event.issue.number }}"
        labels: "automerge"
        body: "This PR was automatically created to document the issue."