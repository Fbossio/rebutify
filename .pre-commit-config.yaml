repos:
  # BUILT-IN HOOKS
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-merge-conflict
        name: Checking merge conflicts
        stages: [pre-commit]
      - id: detect-private-key
        name: Detecting private keys
        stages: [pre-commit]
      - id: no-commit-to-branch
        name: Preventing commits to main branch
        stages: [pre-commit]
        args: ['--branch', 'main']

  # ADD ISSUE NUMBER TO COMMIT
  - repo: local
    hooks:
      - id: add-issue-to-commit
        name: Add issue number to commit
        entry: git-hooks/add-issue-to-commit
        language: script
        stages: [prepare-commit-msg]

  # LINTING & FORMATTING PYTHON
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.3.7
    hooks:
      - id: ruff
        name: Linting python code
        types: [python]
        stages: [pre-commit]
        args: ['--select', 'I', '--fix']
      - id: ruff-format
        name: Formatting python code
        types: [python]
        stages: [pre-commit]

  # LINTING FRONTEND
  - repo: local
    hooks:
      - id: eslint
        # We are using bash -c to run the command in the frontend directory
        entry: bash -c 'cd frontend && npm run lint'
        name: ESLinting front-end code
        language: system
        stages: [pre-commit]

  # TYPE CHECKING PYTHON
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.9.0
    hooks:
      - id: mypy
        types: [python]
        name: Type checking python code
        additional_dependencies:
          [django-stubs, djangorestframework-stubs]
        stages: [pre-commit]

  # CHECKING FOR PYTHON SECURITY ISSUES
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.8
    hooks:
      - id: bandit
        name: Checking for python security issues
        stages: [pre-commit]
